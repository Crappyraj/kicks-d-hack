KIET_CCIP_P14_Byteland, A triangle city


Byteland is a small city somewhere beyond seven seas.

The people of Byteland love triangular shape because the shape of the city on map is in the form of a triangle.

One day, few thieves entered Byteland via some illegal connections.

Now the police of Byteland wants to catch them.

Police doesn't knows that thieves have captured one of the houses in Byteland or outside the Byteland.

Houses in Byteland lie exactly on an integer coordinate which lie inside and at the triangular boundary having coordinates A (x1, y1), B (x2, y2), C (x3, y3).

The Coordinate where the thieves hide is D(x4,y4).

The police is only capable to caught thieves inside the Byteland map and till boundary.

outside the boundary Police is not capable to find Thieves.

So you have to check whether police would "caught" or "not caught"

Input Format

First line of the input contains two Integers x1 and y1, representing the coordinates of point A. Second line of the input contains two Integers x2 and y2, representing the coordinates of point B. Third line of the input contains two Integers x3 and y3, representing the coordinates of point C. Fourth line of the input contains two Integers x4 and y4, representing the coordinates of point D

Constraints

-10^3 <= x1, x2, x3, x4, y1, y2, y3, y4 <= 10^3

Output Format

Single line output

Sample Input 0

0 4
4 0
0 0
1 3
Sample Output 0

caught
Explanation 0

The (1,3) coordinate is on the boundary and police caught thieves whether on boundary or inside boundaries.




#include <bits/stdc++.h> 
using namespace std; 

float area(int x1, int y1, int x2, int y2, int x3, int y3) 
{ 
return abs((x1*(y2-y3) + x2*(y3-y1)+ x3*(y1-y2))/2.0); 
}

bool isInside(int x1, int y1, int x2, int y2, int x3, int y3, int x, int y) 
{ 
float A = area (x1, y1, x2, y2, x3, y3); 
float A1 = area (x, y, x2, y2, x3, y3); 
float A2 = area (x1, y1, x, y, x3, y3);
float A3 = area (x1, y1, x2, y2, x, y); 
return (A == A1 + A2 + A3); 
}

int main() 
{
    int x1,x2,x3,y1,y2,y3,x4,y4;
    cin>>x1>>y1;
    cin>>x2>>y2;
    cin>>x3>>y3;
    cin>>x4>>y4;
if (isInside(x1, y1, x2, y2, x3, y3, x4, y4)) 
    printf ("caught"); 
else
    printf ("not caught"); 

return 0; 
}





import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner scan=new Scanner(System.in);
        int x1=scan.nextInt();
        int y1=scan.nextInt();
        int x2=scan.nextInt();
        int y2=scan.nextInt();
        int x3=scan.nextInt();
        int y3=scan.nextInt();
        int x4=scan.nextInt();
        int y4=scan.nextInt();
        int maxx=Math.max(Math.max(x1,x2),x3);
        int maxy=Math.max(Math.max(y1,y2),y3);
        int minx=Math.min(Math.min(x1,x2),x3);
        int miny=Math.min(Math.min(y1,y2),y3);
        if(x4>=minx&&x4<=maxx&&y4>=miny&&y4<=maxy)
            System.out.println("caught");
        else
            System.out.println("not caught");
        
    }
}